{"version":3,"sources":["const.ts","components/SketchList.tsx","api/getSketches.ts","api/getTiles.ts","components/Entry.tsx","components/TileList.tsx","components/ColorCircle.tsx","components/ColorPicker.tsx","context/CanvasProvider.tsx","components/Palette.tsx","api/getTile.ts","context/WebSocketProvider.tsx","components/Drawing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BASE_URL","SketchList","useState","sketches","setSketches","useEffect","fetch","method","headers","then","response","a","status","Error","json","data","map","id","imageUrl","key","src","alt","APP_MODE","TileList","tiles","setTiles","to","Entry","SKETCH","appMode","setAppMode","toggleAppMode","useCallback","prevAppMode","TILE","type","onClick","useStyles","makeStyles","colorCircle","width","height","cursor","color","props","backgroundColor","ColorCircle","classes","className","colors","theme","root","flexGrow","wrapper","display","ColorPicker","onChange","CanvasContext","createContext","CanvasProvider","children","value","setColor","Provider","useCanvasState","context","useContext","Palette","setValue","Paper","Tabs","event","newValue","indicatorColor","textColor","centered","Tab","label","WebSocketContext","WebSocketProvider","ws","useRef","stompClient","current","SockJS","onopen","console","error","onclose","onmessage","onerror","over","paper","padding","spacing","textAlign","palette","text","secondary","Drawing","imgUrl","setImgUrl","canvasRef","undefined","mousePosition","setMousePosition","isPainting","setIsPainting","useStompClient","getCoordinates","canvas","x","pageX","offsetLeft","y","pageY","offsetTop","startPaint","coordinates","paint","preventDefault","stopPropagation","newMousePosition","originalMousePosition","getContext","strokeStyle","lineJoin","lineWidth","globalAlpha","beginPath","moveTo","lineTo","closePath","stroke","send","JSON","stringify","commandType","gameToken","startX","startY","endX","endY","drawLine","exitPaint","getTile","tile","addEventListener","removeEventListener","Grid","container","item","xs","ref","style","backgroundImage","App","basename","exact","path","render","match","params","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c00c0dc3.chunk.js","sourcesContent":["export const BASE_URL = 'https://main-api.jonghyeon.com';\nexport const WEBSOCKET_URL = 'http://sock.jonghyeon.com/ws-stomp';\nexport const WEBSOCKET_SEND_CHANEL = '/publish/paint';\n","import React, { useState, useEffect } from 'react';\nimport { getSketches } from '../api/getSketches';\nimport { BASE_URL } from '../const';\nimport { ImageInfo } from '../types';\n\nexport default function SketchList() {\n  const [sketches, setSketches] = useState<ImageInfo[]>([]);\n\n  useEffect(() => {\n    getSketches().then((data: ImageInfo[]) => setSketches(data));\n  }, []);\n  return (\n    <ul>\n      {sketches.map(({ id, imageUrl }) => (\n        <li key={id}>\n          <div>\n            <p>id: {id}</p>\n            <p>\n              <img src={`${BASE_URL}/${imageUrl}`} alt={'' + id} />\n            </p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { BASE_URL } from '../const';\n\nexport const getSketches = () => {\n  return fetch(`${BASE_URL}/api/image/sketches`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(async (response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error();\n    }\n    const data = await response.json();\n    return data;\n  });\n};\n","import { BASE_URL } from '../const';\n\nexport const getTiles = () => {\n  return fetch(`${BASE_URL}/api/image/tiles`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(async (response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error();\n    }\n    const data = await response.json();\n    return data;\n  });\n};\n","import React, { useState, useCallback } from 'react';\nimport SketchList from './SketchList';\nimport TileList from './TileList';\n\n//TODO: transpile이후에 즉시실행함수로 만들어 tree shaking에 걸러지지 않음 및 reverse map을 만듬의 이유로 const enum으로 바꾸려고 했지만 compile error\nenum APP_MODE {\n  SKETCH = 'SKETCH',\n  TILE = 'TILE'\n}\n\nfunction Entry() {\n  const [appMode, setAppMode] = useState<APP_MODE>(APP_MODE.SKETCH);\n\n  const toggleAppMode = useCallback(() => {\n    setAppMode((prevAppMode) =>\n      prevAppMode === APP_MODE.SKETCH ? APP_MODE.TILE : APP_MODE.SKETCH\n    );\n  }, [setAppMode]);\n\n  return (\n    <div>\n      <div>\n        <p>mode: {appMode}</p>\n        <p>\n          <button type=\"button\" onClick={toggleAppMode}>\n            toggle mode\n          </button>\n        </p>\n      </div>\n      <div>\n        {appMode === APP_MODE.SKETCH && <SketchList />}\n        {appMode === APP_MODE.TILE && <TileList />}\n      </div>\n    </div>\n  );\n}\n\nexport default Entry;\n","import React, { useState, useEffect } from 'react';\nimport { getTiles } from '../api/getTiles';\nimport { BASE_URL } from '../const';\nimport { Link } from 'react-router-dom';\nimport { ImageInfo } from '../types';\n\nexport default function TileList() {\n  const [tiles, setTiles] = useState<ImageInfo[]>([]);\n\n  useEffect(() => {\n    getTiles().then((data: ImageInfo[]) => setTiles(data));\n  }, []);\n\n  return (\n    <ul>\n      {tiles.map(({ id, imageUrl }) => (\n        <li key={id}>\n          <div>\n            <p>id: {id}</p>\n            <p>\n              <Link to={`/paint/${id}`}>\n                <img src={`${BASE_URL}/${imageUrl}`} alt={'' + id} />\n              </Link>\n            </p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  colorCircle: {\n    'box-sizing': 'border-box',\n    width: '35px',\n    height: '35px',\n    'flex-shrink': 0,\n    'max-width': '100%',\n    'border-radius': '50%',\n    cursor: 'pointer'\n  },\n  color: (props: { color: string }) => ({\n    backgroundColor: props.color\n  })\n});\nexport default function ColorCircle({\n  color,\n  onClick\n}: {\n  color: string;\n  onClick: (color: string) => void;\n}) {\n  const classes = useStyles({ color });\n  return (\n    <div\n      className={`${classes.colorCircle} ${classes.color}`}\n      onClick={() => onClick(color)}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ColorCircle from './ColorCircle';\n//참고 https://codesandbox.io/s/react-custom-color-picker-forked-y7873?file=/src/ColorPicker.js\n\nconst colors = [\n  '#4A90E2',\n  '#F5A623',\n  '#F8E71C',\n  '#8B572A',\n  '#417505',\n  '#BD10E0',\n  '#50E3C2',\n  '#9013FE',\n  '#B8E986'\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  wrapper: {\n    display: 'flex',\n    'flex-wrap': 'wrap'\n  }\n}));\n\nexport default function ColorPicker({\n  onChange\n}: {\n  onChange: (color: string) => void;\n}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      {colors.map((color) => {\n        return <ColorCircle color={color} onClick={onChange} />;\n      })}\n    </div>\n  );\n}\n","import React, {\n  Context,\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useState\n} from 'react';\n\ninterface CanvasContextState {\n  color: string;\n  setColor: Dispatch<SetStateAction<string>>;\n}\nconst CanvasContext: Context<CanvasContextState> = createContext(\n  {} as CanvasContextState\n);\n\nconst CanvasProvider = ({ children }: { children: React.ReactNode }) => {\n  const [color, setColor] = useState<string>('#4A90E2');\n  const value = {\n    color,\n    setColor\n  };\n\n  return (\n    <CanvasContext.Provider value={value}>{children}</CanvasContext.Provider>\n  );\n};\n\nfunction useCanvasState() {\n  const context = useContext(CanvasContext);\n  if (!context) {\n    throw new Error('useCanvasState must be used within a CanvasContext');\n  }\n  return context;\n}\n\nexport { CanvasProvider, useCanvasState };\n\nexport default CanvasContext;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport ColorPicker from './ColorPicker';\nimport { useCanvasState } from '../context/CanvasProvider';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n});\n\nexport default function Palette() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const { color, setColor } = useCanvasState();\n\n  const handleChange = (\n    event: React.ChangeEvent<unknown>,\n    newValue: number\n  ) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        <Tab label=\"SMOOTH\" />\n        <Tab label=\"SPRAY\" />\n        <Tab label=\"ERASER\" />\n      </Tabs>\n      Selected Color: {color}\n      <ColorPicker onChange={setColor} />\n    </Paper>\n  );\n}\n","import { BASE_URL } from '../const';\n\nexport const getTile = (id: number) => {\n  return fetch(`${BASE_URL}/api/image/tile/${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(async (response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error();\n    }\n    const data = await response.json();\n    return data;\n  });\n};\n","import React, { Context, createContext, useContext, useRef } from 'react';\nimport { Client, over } from 'stompjs';\nimport { WEBSOCKET_URL } from '../const';\n\nconst WebSocketContext: Context<any> = createContext(null);\n\nconst WebSocketProvider = ({ children }: { children: React.ReactNode }) => {\n  const ws = useRef<WebSocket | any>(null);\n  const stompClient = useRef<Client | null>(null);\n\n  if (!ws.current) {\n    // new WebSocket(url) => url needs to have wss or ws prefix. so I use SockJS\n    // But SockJS has no type definition and can used by CDN way -_-\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    ws.current = new SockJS(WEBSOCKET_URL);\n    ws.current.onopen = () => {\n      console.error('websocket onopen');\n    };\n    ws.current.onclose = () => {\n      console.error('websocket onclose');\n    };\n    ws.current.onmessage = () => {\n      console.error('websocket onmessage');\n    };\n    ws.current.onerror = () => {\n      console.error('websocket onerror');\n    };\n  }\n\n  if (!stompClient.current) {\n    stompClient.current = over(ws.current);\n  }\n\n  const value = {\n    stompClient: stompClient.current\n  };\n\n  return (\n    <WebSocketContext.Provider value={value}>\n      {children}\n    </WebSocketContext.Provider>\n  );\n};\n\nconst useStompClient = () => {\n  const context = useContext(WebSocketContext);\n  if (!context) {\n    throw new Error('useCanvasState must be used within a CanvasContext');\n  }\n  return context;\n};\n\nexport { useStompClient, WebSocketProvider };\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Palette from './Palette';\nimport { BASE_URL, WEBSOCKET_SEND_CHANEL } from '../const';\nimport { getTile } from '../api/getTile';\nimport { ImageInfo } from '../types';\nimport { useCanvasState } from '../context/CanvasProvider';\nimport { useStompClient } from '../context/WebSocketProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\ninterface DrawingProps {\n  id: number;\n  width?: number;\n  height?: number;\n}\n\nfunction Drawing({ id, width = 185, height = 198 }: DrawingProps): JSX.Element {\n  const classes = useStyles();\n  const [imgUrl, setImgUrl] = useState('');\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  const [mousePosition, setMousePosition] = useState<Coordinate | undefined>(\n    undefined\n  );\n  const [isPainting, setIsPainting] = useState(false);\n  const { color } = useCanvasState();\n  const { stompClient } = useStompClient();\n\n  const getCoordinates = (event: MouseEvent): Coordinate | undefined => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  const drawLine = (\n    originalMousePosition: Coordinate,\n    newMousePosition: Coordinate\n  ) => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    if (context) {\n      context.strokeStyle = color;\n      context.lineJoin = 'round';\n      context.lineWidth = 5;\n      context.globalAlpha = 0.3;\n\n      context.beginPath();\n      context.moveTo(originalMousePosition.x, originalMousePosition.y);\n      context.lineTo(newMousePosition.x, newMousePosition.y);\n      context.closePath();\n\n      context.stroke();\n      stompClient.send(\n        WEBSOCKET_SEND_CHANEL,\n        {},\n        JSON.stringify({\n          commandType: 'DRAW',\n          gameToken: 'TEST-GAME-TOKEN',\n          color: '#000',\n          startX: 0,\n          startY: 0,\n          endX: 1,\n          endY: 1\n        })\n      );\n    }\n  };\n\n  const startPaint = useCallback((event: MouseEvent) => {\n    const coordinates = getCoordinates(event);\n    if (coordinates) {\n      setIsPainting(true);\n      setMousePosition(coordinates);\n    }\n  }, []);\n\n  const paint = useCallback(\n    (event: MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (isPainting) {\n        const newMousePosition = getCoordinates(event);\n        if (mousePosition && newMousePosition) {\n          drawLine(mousePosition, newMousePosition);\n          setMousePosition(newMousePosition);\n        }\n      }\n    },\n    [isPainting, mousePosition]\n  );\n\n  const exitPaint = useCallback(() => {\n    setIsPainting(false);\n  }, []);\n\n  useEffect(() => {\n    getTile(id).then((tile: ImageInfo) => {\n      if (tile.imageUrl) {\n        setImgUrl(tile.imageUrl);\n      }\n    });\n  }, [id, setImgUrl]);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n\n    canvas.addEventListener('mousedown', startPaint);\n    canvas.addEventListener('mousemove', paint);\n    canvas.addEventListener('mouseup', exitPaint);\n    canvas.addEventListener('mouseleave', exitPaint);\n\n    return () => {\n      canvas.removeEventListener('mousedown', startPaint);\n      canvas.removeEventListener('mousemove', paint);\n      canvas.removeEventListener('mouseup', exitPaint);\n      canvas.removeEventListener('mouseleave', exitPaint);\n    };\n  }, [startPaint, paint, exitPaint]);\n  //TODO: https://www.daleseo.com/material-ui-containers-grids/ grid -> container?\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={10}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>Save Button</Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <canvas\n              ref={canvasRef}\n              className=\"canvas\"\n              width={width}\n              height={height}\n              style={{ backgroundImage: `url(${BASE_URL}/${imgUrl})` }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Palette />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Drawing;\n","import React from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Entry from './components/Entry';\nimport Drawing from './components/Drawing';\nimport { CanvasProvider } from './context/CanvasProvider';\nimport { WebSocketProvider } from './context/WebSocketProvider';\n\nconst baseName = '/everybody777-frontend/canvas';\n\nfunction App() {\n  return (\n    <CanvasProvider>\n      <WebSocketProvider>\n        <Router basename={baseName}>\n          <Switch>\n            <Route\n              exact\n              path=\"/paint/:id\"\n              render={({ match }) => <Drawing id={match.params.id} />}\n            />\n            <Route exact path=\"/\" component={Entry} />\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </Router>\n      </WebSocketProvider>\n    </CanvasProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}